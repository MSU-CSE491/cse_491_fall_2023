/**
 * This file is part of the Fall 2023, CSE 491 course project.
 * @brief A receiver specifically designed to handle game-related data.
 * @note Status: ALPHA
 **/

#pragma once

#include <fstream>
#include <iostream>
#include <unordered_map>

#include "../core/GridPosition.hpp"
#include "DataReceiver.hpp"
#include "GameData.hpp"
#include "JsonBuilder.hpp"

namespace DataCollection {

/**
 * @brief Represents a receiver specifically designed to handle game-related data.
 *
 * GameReceiver is an extension of the generic DataReceiver, specialized to handle
 * data related to games. It provides methods for storing and processing game-specific
 * data types such as GameData.
 */
class GameReceiver : public DataReceiver<GameData> {
public:
  /**
   * @brief Default constructor for the GameReceiver class.
   */
  GameReceiver() = default;

  /**
   * @brief Destructor for the GameReceiver class.
   */
  ~GameReceiver() override = default;

  /**
   * @brief Store a GameData object into the receiver's storage.
   *
   * This method allows for the addition of game-specific data into the
   * receiver's storage for further processing or analysis.
   *
   * @param gameData The GameData object to be stored.
   */
  void store_GameData(const GameData& gameData) { this->storage.push_back(gameData); }
};

}  // namespace DataCollection
   ///< Doc stirngs are generated by ChatGpt